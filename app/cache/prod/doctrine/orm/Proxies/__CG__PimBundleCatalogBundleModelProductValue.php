<?php

namespace Proxies\__CG__\Pim\Bundle\CatalogBundle\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ProductValue extends \Pim\Bundle\CatalogBundle\Model\ProductValue implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'attribute', 'data', 'entity', 'locale', 'scope', 'varchar', 'integer', 'decimal', 'boolean', 'text', 'date', 'datetime', 'options', 'optionIds', 'option', 'media', 'metric', 'prices');
        }

        return array('__isInitialized__', 'id', 'attribute', 'data', 'entity', 'locale', 'scope', 'varchar', 'integer', 'decimal', 'boolean', 'text', 'date', 'datetime', 'options', 'optionIds', 'option', 'media', 'metric', 'prices');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ProductValue $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function hasData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasData', array());

        return parent::hasData();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttribute(\Pim\Bundle\CatalogBundle\Model\AttributeInterface $attribute = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttribute', array($attribute));

        return parent::setAttribute($attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttribute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttribute', array());

        return parent::getAttribute();
    }

    /**
     * {@inheritDoc}
     */
    public function getLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocale', array());

        return parent::getLocale();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocale', array($locale));

        return parent::setLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getScope()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScope', array());

        return parent::getScope();
    }

    /**
     * {@inheritDoc}
     */
    public function setScope($scope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScope', array($scope));

        return parent::setScope($scope);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntity', array());

        return parent::getEntity();
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', array());

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntity(\Pim\Bundle\CatalogBundle\Model\ProductInterface $entity = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntity', array($entity));

        return parent::setEntity($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct(\Pim\Bundle\CatalogBundle\Model\ProductInterface $product = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', array($product));

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function setData($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData', array($data));

        return parent::setData($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getData', array());

        return parent::getData();
    }

    /**
     * {@inheritDoc}
     */
    public function addData($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addData', array($data));

        return parent::addData($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getVarchar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVarchar', array());

        return parent::getVarchar();
    }

    /**
     * {@inheritDoc}
     */
    public function setVarchar($varchar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVarchar', array($varchar));

        return parent::setVarchar($varchar);
    }

    /**
     * {@inheritDoc}
     */
    public function getInteger()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInteger', array());

        return parent::getInteger();
    }

    /**
     * {@inheritDoc}
     */
    public function setInteger($integer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInteger', array($integer));

        return parent::setInteger($integer);
    }

    /**
     * {@inheritDoc}
     */
    public function getDecimal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDecimal', array());

        return parent::getDecimal();
    }

    /**
     * {@inheritDoc}
     */
    public function setDecimal($decimal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDecimal', array($decimal));

        return parent::setDecimal($decimal);
    }

    /**
     * {@inheritDoc}
     */
    public function getBoolean()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBoolean', array());

        return parent::getBoolean();
    }

    /**
     * {@inheritDoc}
     */
    public function setBoolean($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBoolean', array($boolean));

        return parent::setBoolean($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function getText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getText', array());

        return parent::getText();
    }

    /**
     * {@inheritDoc}
     */
    public function setText($text)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setText', array($text));

        return parent::setText($text);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', array());

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', array($date));

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatetime', array());

        return parent::getDatetime();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatetime($datetime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatetime', array($datetime));

        return parent::setDatetime($datetime);
    }

    /**
     * {@inheritDoc}
     */
    public function setOption(\Pim\Bundle\CatalogBundle\Model\AttributeOptionInterface $option = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOption', array($option));

        return parent::setOption($option);
    }

    /**
     * {@inheritDoc}
     */
    public function getOption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOption', array());

        return parent::getOption();
    }

    /**
     * {@inheritDoc}
     */
    public function getOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptions', array());

        return parent::getOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptions($options)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptions', array($options));

        return parent::setOptions($options);
    }

    /**
     * {@inheritDoc}
     */
    public function addOption(\Pim\Bundle\CatalogBundle\Model\AttributeOptionInterface $option)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOption', array($option));

        return parent::addOption($option);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOption(\Pim\Bundle\CatalogBundle\Model\AttributeOptionInterface $option)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOption', array($option));

        return parent::removeOption($option);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getMedia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedia', array());

        return parent::getMedia();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedia(\Akeneo\Component\FileStorage\Model\FileInfoInterface $media = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedia', array($media));

        return parent::setMedia($media);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetric()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetric', array());

        return parent::getMetric();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetric(\Pim\Bundle\CatalogBundle\Model\MetricInterface $metric)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetric', array($metric));

        return parent::setMetric($metric);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrices', array());

        return parent::getPrices();
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array($currency));

        return parent::getPrice($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function setPrices($prices)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrices', array($prices));

        return parent::setPrices($prices);
    }

    /**
     * {@inheritDoc}
     */
    public function addPrice(\Pim\Bundle\CatalogBundle\Model\ProductPriceInterface $price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPrice', array($price));

        return parent::addPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function removePrice(\Pim\Bundle\CatalogBundle\Model\ProductPriceInterface $price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePrice', array($price));

        return parent::removePrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function isRemovable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRemovable', array());

        return parent::isRemovable();
    }

}
